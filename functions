# Image width
width () {
  echo $(sips -g pixelWidth $1 | grep -oE "[[:digit:]]{1,}$")
}

# Image height
height () {
  echo $(sips -g pixelHeight $1 | grep -oE "[[:digit:]]{1,}$")
}

# All the dig info
digga () {
  dig +nocmd $1 any +multiline +noall +answer
}

# Copy with progress
cp_p () {
  rsync -WavP --human-readable --progress $1 $2
}

# Pretty print JSON
cjson () {
  local url=$(echo $1)
  if [[ "http" == $url[0,4] ]] ; then
    curl --silent $url | python -mjson.tool | pygmentize -O style=monokai -f console256 -g
  else
    cat $url | python -mjson.tool | pygmentize -O style=monokai -f console256 -g
  fi
}

# Curl pretty print with underscore
function curlJsonPrettyPrint() {
  local url="${1}"
  curl "$url" | underscore print --color | less -R
}

# Simple server
function server() {
  local port="${1:-8000}"
  #open "http://localhost:${port}/"
  python -m SimpleHTTPServer "$port"
}

# Display local IP
function ip() {
	# ifconfig getifaddr en0
	ifconfig | grep inet | grep broad | awk {'print $2'}
}

# List port procceses
function listPortProcceses() {
	lsof -i tcp:"${1}"
}

# Git push shortcut
function gitAddCommitPush() {
  local msg="${1}"
  git add . && git commit -m "$msg" && git push -u;
}

# Get load average
function loadAverage() {
	uptime | awk '{ s = ""; for (i = 10; i <= NF; i++) s = s $i " "; print s }'
}

# Get HTTP Headers only
function headers() {
  curl -s -D - "${1}" -o /dev/null
}

# Open local server
function openp() {
  if [[ ${1} =~ ^[0-9]{4}$ ]]; then
    open "http://localhost:$1"
  else
    open ${1}
  fi
}

# File search. Pass path and regex
function fileSearch() {
  find ${2} -name ${1}
}

sr ./ *.js temp foo

# Recursive search and replace text
function searchReplace() {
  replace_or_print='-pi';
  if [ "$5" == "dry" ]; then
    replace_or_print='-p';
  fi
  find ${1} -name ${2} -print0 | xargs -0 perl ${replace_or_print} -e ${5} "s/${3}/${4}/g"
}